events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Define upstream for Django app
    upstream django {
        server web:8000;
    }

    # Define the limit request zone at the HTTP level
    limit_req_zone $binary_remote_addr zone=one:10m rate=10r/s;

    server {
        listen 80;
        server_name www.django-blog-jb.com django-blog-jb.com;

        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }
        location / {
            return 301 https://www.django-blog-jb.com$request_uri;
        }
    }

    server {
        listen 443 ssl;
        http2 on;
        server_name www.django-blog-jb.com django-blog-jb.com;

        # SSL certificates
        ssl_certificate /etc/letsencrypt/live/www.django-blog-jb.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/www.django-blog-jb.com/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
	
	# Redirect non-www to www (optional)
        if ($host = django-blog-jb.com) {
       	    return 301 https://www.django-blog-jb.com$request_uri;
        }

        # Serve static files
        location /static/ {
           alias /app/staticfiles/;
           expires 30d;
           add_header Cache-Control "public, immutable";
           access_log off;
        }

        # Serve media files
        location /media/ {
           alias /app/media/;
           expires 30d;
           add_header Cache-Control "public";
        }

        # Proxy pass to the Gunicorn app
        location / {
            proxy_pass http://django;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-CSRFToken $http_x_csrf_token;

            # Apply rate limiting to all requests
            limit_req zone=one burst=50 nodelay;

            # Timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }

        # Block known malicious traffic
        location ~* (\.env|/remote/login|wp-admin|wp-login|phpMyAdmin) {
            return 403;
        }
    }
}

